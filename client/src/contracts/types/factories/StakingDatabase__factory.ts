/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingDatabase,
  StakingDatabaseInterface,
} from "../StakingDatabase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_rewardPool",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_boostedPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareUS",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newShare",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "boostedReward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "unstaker",
        type: "address",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "boostedPool",
    outputs: [
      {
        internalType: "contract BoostedPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "claimReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boostedReward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserDetails",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "timestamps",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "userShares",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserDetailsForReward",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boostedShare",
        type: "uint256",
      },
    ],
    name: "getUserReward",
    outputs: [
      {
        internalType: "uint256",
        name: "poolShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "share2Us",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boostedReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "contract RewardPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_rewardPool",
        type: "address",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_staking",
        type: "address",
      },
    ],
    name: "setStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "benifector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "contract VirtuaStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "benifector",
        type: "address",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526078608090815260f060a05261016860c0526101e060e0526200002d906006906004620000ef565b503480156200003b57600080fd5b5060405162001d2d38038062001d2d8339810160408190526200005e9162000179565b62000069336200009f565b60018055600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620001b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000133579160200282015b8281111562000133578251829061ffff1690559160200191906001019062000110565b506200014192915062000145565b5090565b5b8082111562000141576000815560010162000146565b80516001600160a01b03811681146200017457600080fd5b919050565b600080604083850312156200018d57600080fd5b62000198836200015c565b9150620001a8602084016200015c565b90509250929050565b611b6c80620001c16000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c8063026c4207146100e057806348dec2a7146100fc57806366666aa91461013b5780636e9c931c14610166578063715018a61461017b5780638381e1821461018357806387a5ba88146101965780638da5cb5b146101a95780638ff39099146101b1578063bae2f606146101c4578063c1841e32146101d7578063c265eb8a1461020a578063cc3d967b1461022c578063d279c19114610250578063e5932c4014610263578063ee99205c14610276578063f2fde38b14610289575b600080fd5b6100e960055481565b6040519081526020015b60405180910390f35b61012661010a3660046117ed565b6007602052600090815260409020600481015460059091015482565b604080519283526020830191909152016100f3565b60035461014e906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b610179610174366004611811565b61029c565b005b610179610553565b610126610191366004611849565b61058e565b6100e96101a4366004611879565b610af3565b61014e610b14565b6101796101bf3660046117ed565b610b23565b60045461014e906001600160a01b031681565b6101ea6101e53660046117ed565b610b74565b6040805194855260208501939093529183015260608201526080016100f3565b61021d610218366004611892565b610c8b565b6040516100f3939291906118c7565b61023f61023a3660046117ed565b610eb8565b6040516100f3959493929190611918565b61012661025e3660046117ed565b610ffa565b6101796102713660046117ed565b61132e565b60025461014e906001600160a01b031681565b6101796102973660046117ed565b61137f565b6002546001600160a01b031633146102cf5760405162461bcd60e51b81526004016102c690611966565b60405180910390fd5b60006005546000036102e25750826103f4565b600260009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610335573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610359919061199d565b600360009054906101000a90046001600160a01b03166001600160a01b031663750142e66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d0919061199d565b6103da91906119cc565b6005546103e790866119df565b6103f191906119fe565b90505b6001600160a01b0383166000908152600760205260408120600401805486929061041f9084906119cc565b90915550506001600160a01b0383166000818152600760209081526040822080546001818101835582855283852090910189905560038201805491820181558452918320909101849055918152600590910180548392906104819084906119cc565b90915550506001600160a01b0383166000818152600760209081526040822060018082018054918201815584529183204292019190915591905260068054600290920191849081106104d5576104d5611a20565b60009182526020808320909101548354600181018555938352908220909201919091556005805483929061050a9084906119cc565b90915550506040517fa169c4f2ed3a01cba92af71efc2549d8a0a6dc86a1f2e5ca0d66148d26225adf90610545908690849086908890611a36565b60405180910390a150505050565b3361055c610b14565b6001600160a01b0316146105825760405162461bcd60e51b81526004016102c690611a5a565b61058c600061141f565b565b60025460009081906001600160a01b031633146105bd5760405162461bcd60e51b81526004016102c690611966565b6001600160a01b03831660009081526007602052604081206004015490036106125760405162461bcd60e51b81526020600482015260086024820152674e6f205374616b6560c01b60448201526064016102c6565b6001600160a01b03831660009081526007602052604090206004015484111561067d5760405162461bcd60e51b815260206004820152601e60248201527f556e7374616b6520416d6f756e7420457863656564732042616c616e6365000060448201526064016102c6565b6000610689858561146f565b6001600160a01b0385166000908152600760205260408120549192509081906106b490600190611a8f565b90505b80620f423e14610a0b576001600160a01b03861660009081526007602052604090208054889190839081106106ee576106ee611a20565b90600052602060002001541161085d576001600160a01b038616600090815260076020526040902060020180548290811061072b5761072b611a20565b9060005260206000200154421015610799576001600160a01b038616600090815260076020526040902080546064916002918490811061076d5761076d611a20565b906000526020600020015461078291906119df565b61078c91906119fe565b61079690836119cc565b91505b6001600160a01b03861660009081526007602052604090208054806107c0576107c0611aa2565b6000828152602080822083016000199081018390559092019092556001600160a01b0388168252600790526040902060010180548061080157610801611aa2565b6000828152602080822083016000199081018390559092019092556001600160a01b0388168252600790526040902060030180548061084257610842611aa2565b600190038181906000526020600020016000905590556109eb565b6001600160a01b038616600090815260076020526040902060020180548290811061088a5761088a611a20565b90600052602060002001544210156108c05760646108a96002896119df565b6108b391906119fe565b6108bd90836119cc565b91505b6001600160a01b03861660009081526007602052604090208054889190839081106108ed576108ed611a20565b9060005260206000200160008282546109069190611a8f565b90915550506001600160a01b038616600090815260076020526040902080548290811061093557610935611a20565b90600052602060002001548760076000896001600160a01b03166001600160a01b03168152602001908152602001600020600301838154811061097a5761097a611a20565b906000526020600020015461098f91906119df565b61099991906119fe565b6001600160a01b03871660009081526007602052604090206003018054839081106109c6576109c6611a20565b9060005260206000200160008282546109df9190611a8f565b90915550620f423f9150505b806000036109f95750620f423f5b80610a0381611ab8565b9150506106b7565b506000806000610a1c888a87610c8b565b6001600160a01b038b16600090815260076020526040812060040180549497509295509093508b92610a4f908490611a8f565b90915550506001600160a01b03881660009081526007602052604081206005018054849290610a7f908490611a8f565b925050819055508160056000828254610a989190611a8f565b90915550506040517f585126289c580619d8807649059ead5a90d18ca166d7f45c02ee5a60a6dd075290610ad3908b90859085908d90611a36565b60405180910390a1610ae58484611a8f565b999098509650505050505050565b60068181548110610b0357600080fd5b600091825260209091200154905081565b6000546001600160a01b031690565b33610b2c610b14565b6001600160a01b031614610b525760405162461bcd60e51b81526004016102c690611a5a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0380821660009081526007602090815260408083206004808201546005909201546003548451633a80a17360e11b8152945196978897889788979495939092169363750142e6938181019392918290030181865afa158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c05919061199d565b600260009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c919061199d565b92989197509550909350915050565b6000806000600554600003610ca857508391506000905080610eaf565b6001600160a01b038616600090815260076020526040812060040154610cd6670de0b6b3a7640000886119df565b610ce091906119fe565b6001600160a01b038816600090815260076020526040902060050154909150670de0b6b3a764000090610d149083906119df565b610d1e91906119fe565b92506000600260009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d99919061199d565b600360009054906101000a90046001600160a01b03166001600160a01b031663750142e66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e10919061199d565b610e1a91906119cc565b600554909150610e2a82866119df565b610e3491906119fe565b600554909550610e4482886119df565b610e4e91906119fe565b9250610e7e6040518060400160405280600d81526020016c53686172652044657461696c7360981b8152506115f2565b6001600160a01b03881660009081526007602052604090206004810154600590910154610eac918991611635565b50505b93509350939050565b6001600160a01b038116600090815260076020908152604080832060048101546005820154825484518187028101870190955280855260609687968796919586959094600186019460038701949293919291879190830182828015610f3c57602002820191906000526020600020905b815481526020019060010190808311610f28575b5050505050945083805480602002602001604051908101604052809291908181526020018280548015610f8e57602002820191906000526020600020905b815481526020019060010190808311610f7a575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610fe057602002820191906000526020600020905b815481526020019060010190808311610fcc575b50989f979e50929c50939a50919850939650505050505050565b60025460009081906001600160a01b031633146110295760405162461bcd60e51b81526004016102c690611966565b6001600160a01b03831660009081526007602052604081206004015490611050828661146f565b90506000806000611062888686610c8b565b919450925090506110738584611a8f565b9650866000036110ba5760405162461bcd60e51b81526020600482015260126024820152714e6f2072657761726420746f20636c61696d60701b60448201526064016102c6565b6001600160a01b038816600090815260076020526040812060050180548492906110e5908490611a8f565b9250508190555081600560008282546110fe9190611a8f565b92505081905550600085600260009054906101000a90046001600160a01b03166001600160a01b031663567e98f96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117f919061199d565b0361118b57508461129d565b6002546040805163567e98f960e01b8152905188926001600160a01b03169163567e98f99160048083019260209291908290030181865afa1580156111d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f8919061199d565b6112029190611a8f565b60035460408051633a80a17360e11b815290518b926001600160a01b03169163750142e69160048083019260209291908290030181865afa15801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f919061199d565b6112799190611a8f565b61128391906119cc565b60055461129090886119df565b61129a91906119fe565b90505b6001600160a01b038916600090815260076020526040812060050180548392906112c89084906119cc565b9250508190555080600560008282546112e191906119cc565b90915550506040517fe630ca519fedafd2bd9bd35ad65e198e08398f47c88ca063c406740992bcd1a49061131a908a90869085906118c7565b60405180910390a150945050505050915091565b33611337610b14565b6001600160a01b03161461135d5760405162461bcd60e51b81526004016102c690611a5a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b33611388610b14565b6001600160a01b0316146113ae5760405162461bcd60e51b81526004016102c690611a5a565b6001600160a01b0381166114135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c6565b61141c8161141f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080805b6001600160a01b0384166000908152600760205260409020600301548110156115e8576001600160a01b03841660009081526007602052604081206001018054839081106114c4576114c4611a20565b9060005260206000200154426114da9190611a8f565b905060006114e782611681565b90506114fc670de0b6b3a764000060646119df565b6001600160a01b038716600090815260076020526040902060030180548391908690811061152c5761152c611a20565b906000526020600020015461154191906119df565b61154b91906119fe565b61155590856119cc565b93506115856040518060400160405280600d81526020016c426f6f7374656420536861726560981b8152506115f2565b6115d38482600760008a6001600160a01b03166001600160a01b0316815260200190815260200160002060030186815481106115c3576115c3611a20565b9060005260206000200154611635565b505080806115e090611acf565b915050611474565b5090505b92915050565b61141c816040516024016116069190611ae8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526117b3565b61167c83838360405160240161164d939291906118c7565b60408051601f198184030181529190526020810180516001600160e01b031663347b5e8f60e21b1790526117b3565b505050565b6000808080805b60065481101561177857600681815481106116a5576116a5611a20565b90600052602060002001548611156116f4576116c28160016119cc565b6116cd90600a6119df565b9350600681815481106116e2576116e2611a20565b90600052602060002001549250611766565b856116ff8482611a8f565b611711670de0b6b3a7640000876119df565b61171b91906119df565b61172591906119fe565b91506117526040518060400160405280600a815260200169426f6f73742043616c6360b01b8152506115f2565b61175d848785611635565b50949350505050565b8061177081611acf565b915050611688565b50846117848382611a8f565b611796670de0b6b3a7640000866119df565b6117a091906119df565b6117aa91906119fe565b95945050505050565b61141c8160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6001600160a01b038116811461141c57600080fd5b6000602082840312156117ff57600080fd5b813561180a816117d8565b9392505050565b60008060006060848603121561182657600080fd5b833592506020840135611838816117d8565b929592945050506040919091013590565b6000806040838503121561185c57600080fd5b82359150602083013561186e816117d8565b809150509250929050565b60006020828403121561188b57600080fd5b5035919050565b6000806000606084860312156118a757600080fd5b83356118b2816117d8565b95602085013595506040909401359392505050565b9283526020830191909152604082015260600190565b600081518084526020808501945080840160005b8381101561190d578151875295820195908201906001016118f1565b509495945050505050565b60a08152600061192b60a08301886118dd565b828103602084015261193d81886118dd565b9050828103604084015261195181876118dd565b60608401959095525050608001529392505050565b6020808252601d908201527f4f6e6c79207374616b696e67436f6e74726163742063616e2063616c6c000000604082015260600190565b6000602082840312156119af57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156115ec576115ec6119b6565b60008160001904831182151516156119f9576119f96119b6565b500290565b600082611a1b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b938452602084019290925260408301526001600160a01b0316606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b818103818111156115ec576115ec6119b6565b634e487b7160e01b600052603160045260246000fd5b600081611ac757611ac76119b6565b506000190190565b600060018201611ae157611ae16119b6565b5060010190565b600060208083528351808285015260005b81811015611b1557858101830151858201604001528201611af9565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122007eb1b614dc98103e1e0fd4b84cfb2d6e66907a4460206b5b07f19fff2f4087e64736f6c63430008100033";

type StakingDatabaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingDatabaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingDatabase__factory extends ContractFactory {
  constructor(...args: StakingDatabaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _rewardPool: string,
    _boostedPool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingDatabase> {
    return super.deploy(
      _rewardPool,
      _boostedPool,
      overrides || {}
    ) as Promise<StakingDatabase>;
  }
  getDeployTransaction(
    _rewardPool: string,
    _boostedPool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardPool,
      _boostedPool,
      overrides || {}
    );
  }
  attach(address: string): StakingDatabase {
    return super.attach(address) as StakingDatabase;
  }
  connect(signer: Signer): StakingDatabase__factory {
    return super.connect(signer) as StakingDatabase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingDatabaseInterface {
    return new utils.Interface(_abi) as StakingDatabaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingDatabase {
    return new Contract(address, _abi, signerOrProvider) as StakingDatabase;
  }
}
