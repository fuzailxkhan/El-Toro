/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardPool, RewardPoolInterface } from "../RewardPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "setStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDatabase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61059d806100826000396000f3fe60806040526004361061006f5760003560e01c80632e1a7d4d146100cf578063715018a6146100f1578063750142e61461010657806382a547f81461012f5780638da5cb5b146101675780638ff390991461017c578063d7b4be241461019c578063f2fde38b146101bc57600080fd5b366100ca57600034116100c25760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590811195c1bdcda5d08105b5bdd5b9d60521b60448201526064015b60405180910390fd5b476004819055005b600080fd5b3480156100db57600080fd5b506100ef6100ea3660046104e9565b6101dc565b005b3480156100fd57600080fd5b506100ef61035e565b34801561011257600080fd5b5061011c60045481565b6040519081526020015b60405180910390f35b34801561013b57600080fd5b5060035461014f906001600160a01b031681565b6040516001600160a01b039091168152602001610126565b34801561017357600080fd5b5061014f610399565b34801561018857600080fd5b506100ef610197366004610502565b6103a8565b3480156101a857600080fd5b5060025461014f906001600160a01b031681565b3480156101c857600080fd5b506100ef6101d7366004610502565b6103f9565b336101e5610399565b6001600160a01b03161461020b5760405162461bcd60e51b81526004016100b990610532565b60026001540361025d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100b9565b6002600155478111156102a75760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b60448201526064016100b9565b6002546001600160a01b031633146102fe5760405162461bcd60e51b815260206004820152601a6024820152794f6e6c792064617461626173652063616e20776974686472617760301b60448201526064016100b9565b6002546040516001600160a01b03909116908290600081818185875af1925050503d806000811461034b576040519150601f19603f3d011682016040523d82523d6000602084013e610350565b606091505b505047600455505060018055565b33610367610399565b6001600160a01b03161461038d5760405162461bcd60e51b81526004016100b990610532565b6103976000610499565b565b6000546001600160a01b031690565b336103b1610399565b6001600160a01b0316146103d75760405162461bcd60e51b81526004016100b990610532565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b33610402610399565b6001600160a01b0316146104285760405162461bcd60e51b81526004016100b990610532565b6001600160a01b03811661048d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100b9565b61049681610499565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104fb57600080fd5b5035919050565b60006020828403121561051457600080fd5b81356001600160a01b038116811461052b57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220ecf176e54fb73a9a2c7e989fe837bde8aa98904899e98cf5d9234134e5409c0564736f6c63430008100033";

type RewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardPool__factory extends ContractFactory {
  constructor(...args: RewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardPool> {
    return super.deploy(overrides || {}) as Promise<RewardPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardPool {
    return super.attach(address) as RewardPool;
  }
  connect(signer: Signer): RewardPool__factory {
    return super.connect(signer) as RewardPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolInterface {
    return new utils.Interface(_abi) as RewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardPool {
    return new Contract(address, _abi, signerOrProvider) as RewardPool;
  }
}
